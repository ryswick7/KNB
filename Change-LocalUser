<#
.SYNOPSIS
Set-VM-LocalUser changes the specified users' fullname and disables some of the user. 
.DESCRIPTION
Set-VM-LocalUser requires Microsoft.Powershell.LocalAccounts module to configure the local user settings. Microsoft.Powershell.LocalAccounts module comes as part of the Windows Management Framework (WMF) v5.1 
.PARAMETER computername
The computer name, or names, to query. Default: Localhost.
.EXAMPLE
Set-VM-LocalUser -computername VWAPPP10, VWSDBP10, VWWEBP10 
Set-VM-LocalUser -computername VWLETP01 | export-csv -path C:\Temp\Server.csv
Set-VM-LocalUser 
.NOTES
Created by ryswick7
18/2/2022 First release
21/2/2022 Script enhancements

For local user password management, this might be a better solution, instead of running script reference: https://www.microsoft.com/en-us/download/details.aspx?id=46899
#>

$cred = Get-Credential

function Set-VM-LocalUser
{
    [CmdletBinding()]
    param (
        [Parameter(Mandatory=$false)]
        [string[]]$computername = 'localhost'        
    )
   
    ForEach ($vm in $computername)
   {
       Invoke-Command -ComputerName $vm -Credential $cred -ScriptBlock {
            Get-LocalUser | Where-Object {$_.name -eq 'sysadm1'} | Set-LocalUser -FullName 'System Admin - DCM (RJ)';
            Get-LocalUser | Where-Object {$_.name -eq 'sysadm2'} | Set-LocalUser -FullName 'System Admin 2 - DCM (MMM)';
            Get-LocalUser | Where-Object {$_.name -eq 'sysadm3'} | Set-LocalUser -FullName 'System Admin 3 - DCM (TK)';
            Get-LocalUser | Where-Object {$_.name -eq 'sysadm4'} | Set-LocalUser -FullName 'System Admin 4 - (TBD)';
            Get-LocalUser | Where-Object {$_.name -eq 'sysadm4'} | Disable-LocalUser;
            Get-LocalUser | Where-Object {$_.name -match 'sysadm'}
       } | Select-Object -Property name, fullname, enabled, @{name='Hostname';expression={$_.pscomputername}}
   }
}
